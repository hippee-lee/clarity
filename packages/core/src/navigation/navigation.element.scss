@import './../styles/tokens/generated/index';
@import './../styles/mixins/mixins';

:host {
  background-color: var(--cds-global-color-gray-200, #{--cds-global-color-gray-200});
  height: inherit;
  width: inherit !important; // Why so important??
}

:host(:not([expanded])) {
  // TODO(matthew): turn y-width into a themable variable??
  max-width: 4rem;
}

:host([expanded]:not([layout='horizontal'])) {
  --border-color: deepskyblue;
  // TODO(matthew): turn y-width into a themable variable??
  // expanded width is 12 rem when expanded attr
  --width: calc(5 * #{$cds-global-space-12}); // 12rem
  width: var(--width) !important;
  max-width: var(--width) !important;
  min-width: var(--width) !important;
}

:host([layout='horizontal']) {
  height: auto;
  width: inherit !important;
  max-width: unset;
}

.private-host {
  // TODO(matthew): turn x-height into a themable variable??
  height: inherit;
  overflow: auto;
}

// Thinking to be specific about the overflow behavior.
:host([layout='horizontal']) {
  .navigation-body {
    flex-grow: 1;
    overflow-x: auto;
  }
}

:host([layout='vertical']) {
  .navigation-body {
    overflow-y: auto;
  }
}

.navigation-body {
  width: 100%;
  height: 100%;
}

.navigation-header {
  width: 100%;
}

::slotted([cds-layout~='align:bottom']) {
  margin-top: auto !important;
}

::slotted([cds-layout~='align:right']) {
  margin-left: auto !important;
}
