/**
 * @fileoverview This file is generated by the Angular template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride}
 */
/* tslint:disable */
import * as i0 from '@angular/core';
import * as i1 from 'clarity-angular/icon/icon';
import * as i2 from 'clarity-angular/data/datagrid/datagrid-filter';
import * as i3 from 'clarity-angular/popover/common/popover-old.directive';
import * as i4 from 'clarity-angular/data/datagrid/providers/custom-filter';
import * as i5 from 'clarity-angular/data/datagrid/providers/filters';
var styles_DatagridFilter = [];
export var RenderType_DatagridFilter = i0.ɵcrt({ encapsulation: 2,
    styles: styles_DatagridFilter, data: {} });
function View_DatagridFilter_1(_l) {
    return i0.ɵvid(0, [(_l()(), i0.ɵted(null, ['\n            '])), (_l()(), i0.ɵeld(0, null, null, 13, 'div', [['class', 'datagrid-filter']], null, null, null, null, null)), (_l()(), i0.ɵted(null, ['\n                '])), (_l()(), i0.ɵted(null, ['\n                '])),
        (_l()(), i0.ɵeld(0, null, null, 7, 'div', [['class', 'datagrid-filter-close-wrapper']], null, null, null, null, null)),
        (_l()(), i0.ɵted(null, ['\n                    '])), (_l()(), i0.ɵeld(0, null, null, 4, 'button', [['aria-label', 'Close'], ['class',
                'close'], ['type', 'button']], null, [[null, 'click']], function (_v, en, $event) {
            var ad = true;
            var _co = _v.component;
            if (('click' === en)) {
                var pd_0 = ((_co.open = false) !== false);
                ad = (pd_0 && ad);
            }
            return ad;
        }, null, null)), (_l()(), i0.ɵted(null, ['\n                        '])),
        (_l()(), i0.ɵeld(0, null, null, 1, 'clr-icon', [['aria-hidden', 'true'],
            ['shape', 'close']], null, null, null, null, null)), i0.ɵdid(16384, null, 0, i1.IconCustomTag, [], null, null), (_l()(), i0.ɵted(null, ['\n                    '])),
        (_l()(), i0.ɵted(null, ['\n                '])), (_l()(), i0.ɵted(null, ['\n    \n                '])), i0.ɵncd(null, 0), (_l()(), i0.ɵted(null, ['\n            '])), (_l()(), i0.ɵted(null, ['\n        ']))], null, null);
}
export function View_DatagridFilter_0(_l) {
    return i0.ɵvid(0, [(_l()(), i0.ɵted(null, ['\n        '])), (_l()(), i0.ɵeld(0, [['anchor', 1]], null, 0, 'button', [['class', 'datagrid-filter-toggle'],
            ['type', 'button']], [[2, 'datagrid-filter-open', null], [2, 'datagrid-filtered',
                null]], [[null, 'click']], function (_v, en, $event) {
            var ad = true;
            var _co = _v.component;
            if (('click' === en)) {
                var pd_0 = (_co.toggle() !== false);
                ad = (pd_0 && ad);
            }
            return ad;
        }, null, null)), (_l()(), i0.ɵted(null, ['\n\n        '])),
        (_l()(), i0.ɵand(16777216, null, null, 1, function (_v, en, $event) {
            var ad = true;
            var _co = _v.component;
            if (('clrPopoverOldChange' === en)) {
                var pd_0 = ((_co.open = $event) !== false);
                ad = (pd_0 && ad);
            }
            return ad;
        }, View_DatagridFilter_1)), i0.ɵdid(147456, null, 0, i3.PopoverDirectiveOld, [i0.TemplateRef, i0.ViewContainerRef], { anchorElem: [0, 'anchorElem'], anchorPoint: [1,
                'anchorPoint'], popoverPoint: [2, 'popoverPoint'], popoverOptions: [3, 'popoverOptions'],
            clrPopoverOld: [4, 'clrPopoverOld'] }, { clrPopoverOldChange: 'clrPopoverOldChange' }),
        (_l()(), i0.ɵted(null, ['\n    ']))], function (_ck, _v) {
        var _co = _v.component;
        var currVal_2 = i0.ɵnov(_v, 1);
        var currVal_3 = _co.anchorPoint;
        var currVal_4 = _co.popoverPoint;
        var currVal_5 = _co.popoverOptions;
        var currVal_6 = _co.open;
        _ck(_v, 4, 0, currVal_2, currVal_3, currVal_4, currVal_5, currVal_6);
    }, function (_ck, _v) {
        var _co = _v.component;
        var currVal_0 = _co.open;
        var currVal_1 = _co.active;
        _ck(_v, 1, 0, currVal_0, currVal_1);
    });
}
export function View_DatagridFilter_Host_0(_l) {
    return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, null, null, 2, 'clr-dg-filter', [], null, null, null, View_DatagridFilter_0, RenderType_DatagridFilter)), i0.ɵprd(6144, null, i4.CustomFilter, null, [i2.DatagridFilter]), i0.ɵdid(180224, null, 0, i2.DatagridFilter, [i5.FiltersProvider], null, null)], null, null);
}
export var DatagridFilterNgFactory = i0.ɵccf('clr-dg-filter', i2.DatagridFilter, View_DatagridFilter_Host_0, { open: 'clrDgFilterOpen', customFilter: 'clrDgFilter' }, { openChanged: 'clrDgFilterOpenChange' }, ['*']);
//# sourceMappingURL=datagrid-filter.ngfactory.js.map