/**
 * @fileoverview This file is generated by the Angular template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride}
 */
/* tslint:disable */
import * as i0 from '@angular/core';
import * as i1 from '@angular/forms';
import * as i2 from 'clarity-angular/data/datagrid/built-in/filters/datagrid-string-filter';
import * as i3 from '../../datagrid-filter.ngfactory';
import * as i4 from 'clarity-angular/data/datagrid/providers/custom-filter';
import * as i5 from 'clarity-angular/data/datagrid/datagrid-filter';
import * as i6 from 'clarity-angular/data/datagrid/providers/filters';
import * as i7 from '@angular/common';
import * as i8 from 'clarity-angular/data/datagrid/render/dom-adapter';
var styles_DatagridStringFilter = [];
export var RenderType_DatagridStringFilter = i0.ɵcrt({ encapsulation: 2,
    styles: styles_DatagridStringFilter, data: {} });
function View_DatagridStringFilter_1(_l) {
    return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, [[1, 0], ['input', 1]], null, 5, 'input', [['name', 'search'], ['type', 'text']], [[2, 'ng-untouched', null], [2, 'ng-touched',
                null], [2, 'ng-pristine', null], [2, 'ng-dirty', null],
            [2, 'ng-valid', null], [2, 'ng-invalid', null], [2, 'ng-pending',
                null]], [[null, 'ngModelChange'], [null, 'keyup.enter'],
            [null, 'keyup.escape'], [null, 'input'], [null, 'blur'],
            [null, 'compositionstart'], [null, 'compositionend']], function (_v, en, $event) {
            var ad = true;
            var _co = _v.component;
            if (('input' === en)) {
                var pd_0 = (i0.ɵnov(_v, 1)._handleInput($event.target.value) !== false);
                ad = (pd_0 && ad);
            }
            if (('blur' === en)) {
                var pd_1 = (i0.ɵnov(_v, 1).onTouched() !== false);
                ad = (pd_1 && ad);
            }
            if (('compositionstart' === en)) {
                var pd_2 = (i0.ɵnov(_v, 1)._compositionStart() !== false);
                ad = (pd_2 && ad);
            }
            if (('compositionend' === en)) {
                var pd_3 = (i0.ɵnov(_v, 1)._compositionEnd($event.target.value) !== false);
                ad = (pd_3 && ad);
            }
            if (('ngModelChange' === en)) {
                var pd_4 = ((_co.value = $event) !== false);
                ad = (pd_4 && ad);
            }
            if (('keyup.enter' === en)) {
                var pd_5 = (_co.close() !== false);
                ad = (pd_5 && ad);
            }
            if (('keyup.escape' === en)) {
                var pd_6 = (_co.close() !== false);
                ad = (pd_6 && ad);
            }
            return ad;
        }, null, null)), i0.ɵdid(16384, null, 0, i1.DefaultValueAccessor, [i0.Renderer2, i0.ElementRef, [2, i1.COMPOSITION_BUFFER_MODE]], null, null),
        i0.ɵprd(1024, null, i1.NG_VALUE_ACCESSOR, function (p0_0) {
            return [p0_0];
        }, [i1.DefaultValueAccessor]), i0.ɵdid(671744, null, 0, i1.NgModel, [[8, null],
            [8, null], [8, null], [2, i1.NG_VALUE_ACCESSOR]], { name: [0, 'name'],
            model: [1, 'model'] }, { update: 'ngModelChange' }), i0.ɵprd(2048, null, i1.NgControl, null, [i1.NgModel]), i0.ɵdid(16384, null, 0, i1.NgControlStatus, [i1.NgControl], null, null)], function (_ck, _v) {
        var _co = _v.component;
        var currVal_7 = 'search';
        var currVal_8 = _co.value;
        _ck(_v, 3, 0, currVal_7, currVal_8);
    }, function (_ck, _v) {
        var currVal_0 = i0.ɵnov(_v, 5).ngClassUntouched;
        var currVal_1 = i0.ɵnov(_v, 5).ngClassTouched;
        var currVal_2 = i0.ɵnov(_v, 5).ngClassPristine;
        var currVal_3 = i0.ɵnov(_v, 5).ngClassDirty;
        var currVal_4 = i0.ɵnov(_v, 5).ngClassValid;
        var currVal_5 = i0.ɵnov(_v, 5).ngClassInvalid;
        var currVal_6 = i0.ɵnov(_v, 5).ngClassPending;
        _ck(_v, 0, 0, currVal_0, currVal_1, currVal_2, currVal_3, currVal_4, currVal_5, currVal_6);
    });
}
export function View_DatagridStringFilter_0(_l) {
    return i0.ɵvid(0, [i0.ɵqud(671088640, 1, { input: 0 }), i0.ɵqud(402653184, 2, { filterContainer: 0 }),
        (_l()(), i0.ɵted(null, ['\n        '])), (_l()(), i0.ɵeld(0, null, null, 7, 'clr-dg-filter', [], null, [[null,
                'clrDgFilterOpenChange']], function (_v, en, $event) {
            var ad = true;
            var _co = _v.component;
            if (('clrDgFilterOpenChange' === en)) {
                var pd_0 = ((_co.open = $event) !== false);
                ad = (pd_0 && ad);
            }
            return ad;
        }, i3.View_DatagridFilter_0, i3.RenderType_DatagridFilter)), i0.ɵprd(6144, null, i4.CustomFilter, null, [i5.DatagridFilter]), i0.ɵdid(180224, [[2, 4]], 0, i5.DatagridFilter, [i6.FiltersProvider], { open: [0, 'open'], customFilter: [1,
                'customFilter'] }, { openChanged: 'clrDgFilterOpenChange' }), (_l()(), i0.ɵted(0, ['\n            '])), (_l()(), i0.ɵted(0, ['\n            '])), (_l()(), i0.ɵand(16777216, null, 0, 1, null, View_DatagridStringFilter_1)), i0.ɵdid(16384, null, 0, i7.NgIf, [i0.ViewContainerRef, i0.TemplateRef], { ngIf: [0, 'ngIf'] }, null), (_l()(), i0.ɵted(0, ['\n        '])), (_l()(), i0.ɵted(null, ['\n    ']))], function (_ck, _v) {
        var _co = _v.component;
        var currVal_0 = _co.open;
        var currVal_1 = _co.registered;
        _ck(_v, 5, 0, currVal_0, currVal_1);
        var currVal_2 = _co.open;
        _ck(_v, 9, 0, currVal_2);
    }, null);
}
export function View_DatagridStringFilter_Host_0(_l) {
    return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, null, null, 2, 'clr-dg-string-filter', [], null, null, null, View_DatagridStringFilter_0, RenderType_DatagridStringFilter)), i0.ɵprd(6144, null, i4.CustomFilter, null, [i2.DatagridStringFilter]), i0.ɵdid(4374528, null, 0, i2.DatagridStringFilter, [i0.Renderer2, i6.FiltersProvider, i8.DomAdapter], null, null)], null, null);
}
export var DatagridStringFilterNgFactory = i0.ɵccf('clr-dg-string-filter', i2.DatagridStringFilter, View_DatagridStringFilter_Host_0, { customStringFilter: 'clrDgStringFilter',
    value: 'clrFilterValue' }, { filterValueChange: 'clrFilterValueChange' }, []);
//# sourceMappingURL=datagrid-string-filter.ngfactory.js.map