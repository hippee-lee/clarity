/**
 * @fileoverview This file is generated by the Angular template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride}
 */
/* tslint:disable */
import * as i0 from '@angular/core';
import * as i1 from 'clarity-angular/forms/checkbox/checkbox';
import * as i2 from '@angular/forms';
var styles_Checkbox = [];
export var RenderType_Checkbox = i0.ɵcrt({ encapsulation: 2, styles: styles_Checkbox,
    data: {} });
export function View_Checkbox_0(_l) {
    return i0.ɵvid(0, [(_l()(), i0.ɵted(null, ['\n        '])), (_l()(), i0.ɵted(null, ['\n        '])), (_l()(), i0.ɵeld(0, null, null, 0, 'input', [['type',
                'checkbox']], [[8, 'id', 0], [8, 'name', 0], [8, 'checked', 0], [8, 'indeterminate', 0],
            [8, 'disabled', 0]], [[null, 'blur'], [null, 'click']], function (_v, en, $event) {
            var ad = true;
            var _co = _v.component;
            if (('blur' === en)) {
                var pd_0 = (_co.touch() !== false);
                ad = (pd_0 && ad);
            }
            if (('click' === en)) {
                var pd_1 = (_co.checkIndeterminateState() !== false);
                ad = (pd_1 && ad);
            }
            return ad;
        }, null, null)), (_l()(), i0.ɵted(null, ['\n        '])), (_l()(),
            i0.ɵeld(0, null, null, 3, 'label', [], [[1, 'for', 0]], null, null, null, null)), (_l()(), i0.ɵted(null, ['\n            '])), i0.ɵncd(null, 0), (_l()(), i0.ɵted(null, ['\n        '])), (_l()(), i0.ɵted(null, ['\n    ']))], null, function (_ck, _v) {
        var _co = _v.component;
        var currVal_0 = _co.id;
        var currVal_1 = _co.name;
        var currVal_2 = _co.checked;
        var currVal_3 = _co.indeterminate;
        var currVal_4 = _co.disabled;
        _ck(_v, 2, 0, currVal_0, currVal_1, currVal_2, currVal_3, currVal_4);
        var currVal_5 = _co.id;
        _ck(_v, 4, 0, currVal_5);
    });
}
export function View_Checkbox_Host_0(_l) {
    return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, null, null, 2, 'clr-checkbox', [], [[2, 'checkbox', null], [2, 'checkbox-inline', null],
            [2, 'disabled', null]], null, null, View_Checkbox_0, RenderType_Checkbox)), i0.ɵprd(5120, null, i2.NG_VALUE_ACCESSOR, function (p0_0) {
            return [p0_0];
        }, [i1.Checkbox]), i0.ɵdid(49152, null, 0, i1.Checkbox, [], null, null)], null, function (_ck, _v) {
        var currVal_0 = !i0.ɵnov(_v, 2).inline;
        var currVal_1 = i0.ɵnov(_v, 2).inline;
        var currVal_2 = i0.ɵnov(_v, 2).disabled;
        _ck(_v, 0, 0, currVal_0, currVal_1, currVal_2);
    });
}
export var CheckboxNgFactory = i0.ɵccf('clr-checkbox', i1.Checkbox, View_Checkbox_Host_0, { _id: 'id', name: 'name', disabled: 'clrDisabled',
    inline: 'clrInline', checked: 'clrChecked', indeterminate: 'clrIndeterminate' }, { indeterminateChange: 'clrIndeterminateChange', change: 'clrCheckedChange' }, ['*']);
//# sourceMappingURL=checkbox.ngfactory.js.map